# -*- coding: utf-8 -*-
"""SALES PREDICTION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13Kg5wqMmXiwqH4SnThwep77rrd7wfL3T

# **TASK-2 : SALES PREDICTION USING PYTHON**



> Author: Vishal Kumar

> Batch: July A54

> Domain: Data Science

Importing Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Importing Dataset"""

sales=pd.read_csv('/content/advertising.csv')
sales.head()

"""# **AIm:-**
Sales prdeiction involves forecasting the amount of a product that a customers will purchase, taking into accounts various factors such as advertising expenditure, target audience segmentation and advertising platform selection.


> Given dataset consist of advertising platform and the related sales. Lets visualize each platform


"""

sales.info()

sales.shape

sales.describe()

"""**Basic Observatioin**

---


> Avg expense spend is highest on TV

> Avg expense spend is lowest to Radio

> Max scale is 27 and min is 1.6
"""

sns.pairplot(sales,x_vars=['TV','Radio','Newspaper'],y_vars='Sales',kind='scatter')
plt.show()

"""Pair Plot Observation

---

When advertising cost increases in TV Ads the sales will increase as well. While for radio and newspaper it is bit unpredictable.
"""

sales['TV'].plot.hist(bins=10)

sales['Radio'].plot.hist(bins=10,color="red",xlabel="Radio")

sales['Newspaper'].plot.hist(bins=10,color="green",xlabel="Newspaper")

"""Histogram Observation

---

The majority sales is the result of low  advertising cost in newspaper
"""

sns.heatmap(sales.corr(),annot=True)
plt.show()

"""**SALES IS HIGHLY COORELATED WITH THE TV**

Ltes train our model using linear regression as it is coorelated with only one variable TV
"""

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(sales['TV'],sales['Sales'],test_size=0.3,random_state=0)

print(X_train)

print(y_train)

print(X_test)

print(y_test)

from sklearn.linear_model import LinearRegression
model=LinearRegression()
model.fit(X_train.values.reshape(-1,1),y_train)

res=model.predict(X_test.values.reshape(-1,1))
print(res)

model.coef_

model.intercept_

0.05473199*69.2 + 7.143822253515246

plt.plot(res)

plt.scatter(X_train,y_train)
plt.plot(X_test,7.14382225 + 0.05473199*X_test,'r')
plt.show()

"""Concluding with saying that above mention solution is succesfully able to predict the sales using advertising platform dataset"""